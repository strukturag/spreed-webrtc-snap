#!/usr/bin/python3

import argparse
import http.server
import socketserver
import sys


class RedirectHandler(http.server.BaseHTTPRequestHandler):

    def do_HEAD(self):

        host = self.headers.get('Host')
        if not host:
            self.send_response_only(400)
        else:
            host = host.split(':', 1)[0]
            scheme = self.server.redirect_target_scheme
            port = self.server.redirect_target_port

            self.send_response_only(301)
            self.send_header('Location', "%s://%s%s" % (scheme, host, port))

        self.send_header('Date', self.date_time_string())
        self.end_headers()

    def do_GET(self):
        self.do_HEAD()

    def log_message(self, format, *args):
        return


class Server(socketserver.TCPServer):
    allow_reuse_address = True

    redirect_target_scheme = 'https'
    redirect_target_port = ''

    def setup(self, https=True, target=8443):
        self.redirect_target_scheme = https and 'https' or 'http'
        if (https and target != 443) or (not https and target != 80):
            self.redirect_target_port = ":%s" % target


def main(port=8000, bind="", https=True, target=8443):
    """Main runner."""
    server_address = (bind, port)

    httpd = Server(server_address, RedirectHandler)
    httpd.setup(https=https, target=target)

    try:
        httpd.serve_forever()
    except KeyboardInterrupt:
        httpd.server_close()
        sys.exit(0)

if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument('--http', action='store_true',
                        help='Redirect to http [default: https]')
    parser.add_argument('--bind', '-b', default='', metavar='ADDRESS',
                        help='Specify alternate bind address '
                             '[default: all interfaces]')
    parser.add_argument('--port', action='store',
                        default=8000, type=int,
                        help='Specify alternate bind port [default: 8000]')
    parser.add_argument('target', action='store',
                        default=8443, type=int, metavar='TARGET_PORT',
                        help='Redirect target port [default: 8443]')
    args = parser.parse_args()
    main(port=args.port, bind=args.bind, https=not args.http,
         target=args.target)
